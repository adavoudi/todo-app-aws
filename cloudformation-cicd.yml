Parameters:
  GithubConnectionArn:
    Type: String
    Description: The ARN of the GitHub connection
    Default: arn:aws:codeconnections:us-east-1:515966494838:connection/c7ebad1f-459a-4d1f-8794-ffd5cbbf7b24
  ProjectName:
    Type: String
    Description: The name of the CodeBuild project
    Default: todos
  GithubUserName:
    Type: String
    Description: The GitHub username
    Default: adavoudi
  GitHubRepoName:
    Type: String
    Description: The GitHub repository name
    Default: todo-app-serverless
  IsServerless:
    Type: String
    Description: Whether the application is serverless or not
    Default: "true"
    AllowedValues:
      - "true"
      - "false"

Resources:

  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-artifacts-${AWS::AccountId}'

  ContainerImageRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub '${ProjectName}-container-image-repository'
      EmptyOnDelete: true
      LifecyclePolicy:
        LifecyclePolicyText: |
          {
            "rules": [
              {
                "rulePriority": 1,
                "description": "keep only the latest image",
                "selection": {
                  "tagStatus": "any",
                  "countType": "imageCountMoreThan",
                  "countNumber": 1
                },
                "action": {
                  "type": "expire"
                }
              }
            ]
          }
  
  BackendBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${ProjectName}-BackendBuild'
      Description: CodeBuild project for building the backend application
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec-backend.yml
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/amazonlinux-x86_64-standard:5.0
        ComputeType: BUILD_GENERAL1_SMALL
        ImagePullCredentialsType: CODEBUILD
        EnvironmentVariables:
          - Name: REGION_ID
            Value: !Ref 'AWS::Region'
          - Name: ACCOUNT_ID
            Value: !Ref 'AWS::AccountId'
          - Name: IMAGE_NAME
            Value: !Sub '${ProjectName}-container-image'
          - Name: ECR_REPOSITORY_URI
            Value: !GetAtt ContainerImageRepository.RepositoryUri
      TimeoutInMinutes: 10
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Sub '${ProjectName}-backendbuild-logs'
          StreamName: !Sub '${ProjectName}-backendbuild-logs'
        S3Logs:
          Status: DISABLED
  
  # FrontendBuildProject:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name: !Sub '${ProjectName}-FrontendBuild'
  #     Description: CodeBuild project for building the frontend application
  #     ServiceRole: !GetAtt CodeBuildRole.Arn
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     Source:
  #       Type: CODEPIPELINE
  #       BuildSpec: buildspec-frontend.yml
  #     Environment:
  #       Type: LINUX_CONTAINER
  #       Image: aws/codebuild/amazonlinux-x86_64-standard:5.0
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       ImagePullCredentialsType: CODEBUILD
  #       EnvironmentVariables:
  #         - Name: REGION_ID
  #           Value: !Ref 'AWS::Region'
  #         - Name: USER_POOL_DOMAIN
  #           Value: !Ref 'AWS::AccountId'
  #         - Name: IMAGE_NAME
  #           Value: !Sub '${ProjectName}-container-image'
  #         - Name: ECR_REPOSITORY_URI
  #           Value: !GetAtt ContainerImageRepository.RepositoryUri
  #     TimeoutInMinutes: 10
  #     LogsConfig:
  #       CloudWatchLogs:
  #         Status: ENABLED
  #         GroupName: !Sub '${ProjectName}-frontendbuild-logs'
  #         StreamName: !Sub '${ProjectName}-frontendbuild-logs'
  #       S3Logs:
  #         Status: DISABLED

  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      RoleArn: !GetAtt CodePipelineRole.Arn
      ExecutionMode: SUPERSEDED
      PipelineType: V2
      Triggers:
        - ProviderType: CodeStarSourceConnection
          GitConfiguration:
            SourceActionName: SourceAction
            Push:
              - Branches:
                  Includes: [ main ]
      Stages:
        - Name: Source
          Actions:
            - RunOrder: 1
              Name: SourceAction
              ActionTypeId:
                Owner: AWS
                Category: Source
                Version: 1
                Provider: CodeStarSourceConnection
              Configuration:
                BranchName: main
                ConnectionArn: !Ref GithubConnectionArn
                DetectChanges: true
                FullRepositoryId: !Sub '${GithubUserName}/${GitHubRepoName}'
              OutputArtifacts:
                - Name: SourceArtifact
              Namespace: SourceVariables
        - Name: BackendBuild
          Actions:
            - Name: BackendBuildAction
              RunOrder: 1
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BackendBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BackendBuildArtifact
              Namespace: BackendBuildVariables
        # - Name: DeployInfrastructure
        #   Actions:
        #     - Name: DeployInfrastructureAction
        #       RunOrder: 1
        #       ActionTypeId:
        #         Category: Deploy
        #         Owner: AWS
        #         Version: 1
        #         Provider: CloudFormation
        #       Configuration:
        #         ActionMode: REPLACE_ON_FAILURE
        #         StackName: !Sub '${ProjectName}-application-stack'
        #         Capabilities: CAPABILITY_NAMED_IAM
        #         RoleArn: !GetAtt InfrastructureCloudFormationRole.Arn
        #         TemplatePath: SourceArtifact::cloudformation-application.yml
        #         ParameterOverrides: !Sub |
        #           {
        #             "ContainerImageRepositoryUri": "${ContainerImageRepository.RepositoryUri}",
        #             "ProjectName": "${ProjectName}",
        #             "ImageTag": "#{BackendBuildVariables.IMAGE_TAG}",
        #             "IsServerless": "${IsServerless}"
        #           }
        #       InputArtifacts:
        #         - Name: SourceArtifact
        #       Namespace: DeployVariables
        # - Name: BuildFrontend
        #   Actions:
        #     - Name: BuildFrontendAction
        #       ActionTypeId:
        #         Category: Build
        #         Owner: AWS
        #         Provider: CodeBuild
        #         Version: '1'
        #       Configuration:
        #         ProjectName: !Ref FrontendBuildProject
        #         EnvironmentVariables: !Sub |
        #           [
        #             {
        #               "name": "API_ENDPOINT",
        #               "value": "#{DeployVariables.API_ENDPOINT}",
        #               "type": "PLAINTEXT"
        #             },
        #             {
        #               "name": "USER_POOL_ID",
        #               "value": "#{DeployVariables.USER_POOL_ID}",
        #               "type": "PLAINTEXT"
        #             },
        #             {
        #               "name": "USER_POOL_DOMAIN",
        #               "value": "#{DeployVariables.USER_POOL_DOMAIN}",
        #               "type": "PLAINTEXT"
        #             },
        #             {
        #               "name": "CLIENT_ID",
        #               "value": "#{DeployVariables.CLIENT_ID}",
        #               "type": "PLAINTEXT"
        #             },
        #             {
        #               "name": "REDIRECT_URI",
        #               "value": "#{DeployVariables.REDIRECT_URI}",
        #               "type": "PLAINTEXT"
        #             },
        #             {
        #               "name": "REGION_ID",
        #               "value": "${AWS::Region}",
        #               "type": "PLAINTEXT"
        #             },
        #             {
        #               "name": "S3_BUCKET_NAME",
        #               "value": "#{DeployVariables.S3_BUCKET_FRONTEND}",
        #               "type": "PLAINTEXT"
        #             }
        #           ]
        #       InputArtifacts:
        #         - Name: SourceArtifact
        #       OutputArtifacts:
        #         - Name: BuildFrontendOutput

  ############### IAM Roles ################

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource: !Sub '${ArtifactBucket.Arn}/*'
              - Effect: Allow
                Action:
                  - codebuild:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - codepipeline:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
              - Effect: Allow
                Action:
                  - codestar-connections:*
                Resource: !Ref GithubConnectionArn
              - Effect: Allow
                Action:
                  - cloudformation:*
                Resource: '*'

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - s3:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - codebuild:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - sts:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - ecr:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - lambda:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - cloudformation:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: '*'
  
  InfrastructureCloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: InfrastructureCloudFormationPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - cloudformation:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: '*'
              - Effect: Allow
                Action:
                  - ecr:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - lambda:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: '*'
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                Resource: '*'
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:*
                Resource: '*'
              - Effect: Allow
                Action:
                  - cloudwatch:*
                Resource: '*'
